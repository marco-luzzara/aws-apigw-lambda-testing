plugins {
    id 'java'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

def SPRING_VERSION = '3.1.1'
def JUNIT_VERSION = '5.8.1'

dependencies {
    implementation platform("software.amazon.awssdk:bom:2.20.150")

    // spring
    implementation "org.springframework.boot:spring-boot-starter:${SPRING_VERSION}"
    implementation "org.springframework.boot:spring-boot-starter-aop:${SPRING_VERSION}"
    implementation "org.springframework.cloud:spring-cloud-function-adapter-aws:4.0.5"
    implementation "org.springframework.cloud:spring-cloud-function-web:4.0.5"
    testImplementation "org.springframework.boot:spring-boot-starter-test:${SPRING_VERSION}"

    // junit and assertions
    testImplementation "org.junit.jupiter:junit-jupiter-api:${JUNIT_VERSION}"
    testImplementation("org.assertj:assertj-core:3.24.2")
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${JUNIT_VERSION}"

    // testcontainer
    implementation platform('org.testcontainers:testcontainers-bom:1.18.3')
    testImplementation "org.testcontainers:testcontainers"
    testImplementation "org.testcontainers:junit-jupiter"
    testImplementation 'org.testcontainers:localstack'

    // aws
    //	implementation 'com.amazonaws:aws-java-sdk-bom:1.12.518'
    implementation 'com.amazonaws:aws-lambda-java-core:1.2.2'
    implementation 'com.amazonaws:aws-lambda-java-events:3.11.1'
    runtimeOnly 'com.amazonaws:aws-lambda-java-log4j2:1.5.1'

    // gson
    testImplementation 'com.google.code.gson:gson:2.10.1'

    // logging
    implementation 'org.apache.logging.log4j:log4j-api:2.17.1'
    implementation 'org.apache.logging.log4j:log4j-core:2.17.1'
    runtimeOnly ('org.apache.logging.log4j:log4j-slf4j-impl:2.17.1') {
        exclude group: 'org.slf4j', module: 'log4j-to-slf4j'
    }

    implementation 'software.amazon.awssdk:cognitoidentity'
    implementation 'software.amazon.awssdk:cognitoidentityprovider'
    implementation "software.amazon.awssdk:iam"

    implementation 'com.auth0:java-jwt:4.4.0'
}

var DIST_FOLDER = "${project.buildDir}/dist"

task buildZip(type: Zip) {
    into('lib') {
        from(jar)
        from "${rootProject.rootDir}/src/main/resources/AwsSdkV2DisableCertificateValidation-1.0.jar"
        from(configurations.runtimeClasspath)
    }
    archiveFileName = "dist.zip"
    destinationDirectory = file(DIST_FOLDER)
}

task buildHotReloadFolder(type: Copy) {
    from zipTree("$DIST_FOLDER/dist.zip")
    into "${project.buildDir}/hot-reload"

    dependsOn buildZip
}

classes {
    finalizedBy buildZip
}
